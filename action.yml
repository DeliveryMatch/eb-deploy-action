---
name: "Deploy to AWS Elastic Beanstalk"
description: "Deploy to AWS Elastic Beanstalk"

inputs:
  application-name:
    description: "[frontend, api]"
    required: true
  aws-access-key-id:
    required: true
  aws-secret-access-key:
    required: true
  environment-name:
    description: "[develop, release, production]"
    required: true
  aws-region:
    required: true
  
runs:
  using: "composite"
  steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ inputs.aws-access-key-id }}
        aws-secret-access-key: ${{ inputs.aws-secret-access-key }}
        aws-region: ${{ inputs.aws-region }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      shell: bash
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        DOCKER_IMAGE: ${{ inputs.application-name }}:${{ github.sha }}
      run: |
        docker build -f ${{ inputs.application-name }}/Dockerfile -t $ECR_REGISTRY/$DOCKER_IMAGE .
        docker push $ECR_REGISTRY/$DOCKER_IMAGE
        echo "image=$ECR_REGISTRY/$DOCKER_IMAGE" >> $GITHUB_OUTPUT

    - name: Generate Dockerrun.aws.json
      shell: bash
      run: sed -i='' "s|<DOCKER_IMAGE>|${{ steps.build-image.outputs.image }}|" ${{ inputs.application-name }}/Dockerrun.aws.json
    
    - name: Generate deployment package
      shell: bash
      run: zip -j ${{ github.sha }}.zip ${{ inputs.application-name }}/Dockerrun.aws.json

    - name: Deploy to AWS Elastic Beanstalk
      uses: einaregilsson/beanstalk-deploy@v21
      with:
        aws_access_key: ${{ inputs.aws-access-key-id }}
        aws_secret_key: ${{ inputs.aws-secret-access-key }}
        version_label: ${{ github.sha }}
        application_name: engine-${{ inputs.application-name }}
        environment_name: ${{ inputs.environment-name }}-${{ inputs.application-name }}
        region: ${{ inputs.aws-region }}
        deployment_package: ${{ github.sha }}.zip